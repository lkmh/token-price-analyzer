name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Dependencies
        run: |
          pip install uv
          uv venv .venv
          source .venv/bin/activate
          uv pip install -r requirements.txt ruff
      - name: Run Linter
        run: |
          source .venv/bin/activate
          ruff check .

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Dependencies
        run: |
          pip install uv
          uv venv .venv
          source .venv/bin/activate
          uv pip install -r requirements.txt ruff
      - name: Check Formatting
        run: |
          source .venv/bin/activate
          ruff format .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
      - name: Install Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          pip install uv
          uv venv .venv
          source .venv/bin/activate
          uv pip install -r requirements.txt pytest pytest-cov
      - name: Run Tests with Coverage
        run: |
          source .venv/bin/activate
          python -m pytest -v --cov=./ --cov-report=xml
      